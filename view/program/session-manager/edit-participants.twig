{% do headScript().appendFile('//cdnjs.cloudflare.com/ajax/libs/mustache.js/3.1.0/mustache.js', 'text/javascript') %}

{% do headTitle().append(translate("txt-admin")) %}
{% do headTitle().append(translate("txt-edit-participants-in-session")) %}

<h1>{{ translate("txt-edit-participants-in-session") }}</h1>

<dl class="dl-horizontal">
    <dt>{{ translate("txt-session") }}</dt>
    <dd>{{ session.session }}</dd>
    <dt>{{ translate("txt-project-idea-tool") }}</dt>
    <dd>{{ ideaToolLink(session.tool,'view-admin','name') }}</dd>
    <dt>{{ translate("txt-is-open-for-registration") }}</dt>
    <dd>{{ translate(session.getOpenForRegistrationText()) }}</dd>
    {% if session.quota %}
        <dt>{{ translate("txt-quota") }}</dt>
        <dd>{{ session.quota }}</dd>
    {% endif %}
</dl>


{% do form.prepare() %}
{{ form().openTag(form)|raw }}

<div class="row">
    <div class="col">
        <h2>{{ translate("txt-current-participants") }}</h2>

        <table class="table table-sm table-hover table-striped">
            <tbody id="contacts-table">
            {% set currentContacts = [] %}
            {% for participant in session.participant %}
                {% set currentContacts = currentContacts|merge([participant.contact.id]) %}
                <tr data-id="{{ participant.contact.id }}">
                    <td>
                        <i class="fas fa-minus"></i>
                    </td>
                    <td>
                        <small class="text-muted">{{ participant.contact.id }}</small></td>
                    <td>{{ participant.contact.getFormName() }}</td>
                    <td>{{ participant.contact.contactOrganisation.organisation }}</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>

        <input type="button" class="btn btn-outline-info" id="remove-all" value="{{ translate("txt-remove-all") }}">
        <input type="button" class="btn btn-outline-danger" id="reset" value="{{ translate("txt-reset") }}">

        {{ ztbformelement(form.get('submit')) }}
        {{ ztbformelement(form.get('cancel')) }}
    </div>
    <div class="col">
        <h2>{{ translate("txt-choose-contacts") }}</h2>
        {{ selectionformelement(form.get('selection'), true) }}
        <input type="button" id="selection-search" class="mt-2 btn btn-outline-primary" value="Get selection">

        <div class="input-group pt-3">
            <input type="text" id="contact-search-string" placeholder="Search ..." class="form-control">
            <div class="input-group-append">
                <input type="button" id="contact-search" class="btn btn-outline-primary" value="Search">
            </div>
        </div>
        <h2>{{ translate("txt-search-results") }}</h2>
        <table class="table table-sm table-hover table-striped">
            <tbody id="choose-contacts-table"></tbody>
        </table>

        <input type="button" class="btn btn-outline-success" id="add-all" value="{{ translate("txt-add-all") }}">
        <input type="button" class="btn btn-outline-danger" id="subtract" value="{{ translate("txt-subtract") }}">

        {% if session.isReview() %}
            <h2>{{ translate("txt-project-contacts-results") }}</h2>
            <table class="table table-sm table-hover table-striped">
                <tbody id="project-contacts-table">
                {% for contact in contactService.findContactsInProject(session.projectsession.project)|filter(contact => contact.id not in currentContacts) -%}
                    <tr data-id="{{ contact.id }}">
                        <td>
                            <i class="fas fa-plus"></i>
                        </td>
                        <td>
                            <small class="text-muted">{{ contact.id }}</small></td>
                        <td>{{ contact.getFormName() }}

                            {% if contact == session.projectsession.project.contact %}[PL]{% endif %}

                            {% for proxyContact in session.projectsession.project.proxyContact %}
                                {% if contact == proxyContact %}<span
                                        class="badge badge-primary">PROXY</span>{% endif %}
                            {% endfor %}

                            {% set hasTC = false %}
                            {% for affiliation in session.projectsession.project.affiliation %}
                                {% if not hasTC and contact == affiliation.contact %}{% set hasTc = true %}<span
                                        class="badge badge-info">TC</span>{% endif %}
                            {% endfor %}

                            {% set hasWPL = false %}
                            {% for workpackage in session.projectsession.project.workpackage %}
                                {% if not hasWPL and contact == workpackage.contact %}{% set hasWPL = true %}<span
                                        class="badge badge-dark">WPL</span>{% endif %}
                            {% endfor %}
                        </td>
                        <td>{{ contact.contactOrganisation.organisation }}</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        {% endif %}
    </div>
</div>

<div id="hidden-elements"></div>

{{ form().closeTag()|raw }}

<script type="text/javascript">
    $(document).ready(function () {
        function getContacts($query) {
            $.post('{{ url('zfcadmin/contact/search') }}', {'q': $query}, function (result) {
                let $template = $('#contact-row-template');
                let html = Mustache.render($template.html(), {'contacts': result, 'type': 'plus'});
                $('#choose-contacts-table').html(html);
            });
        }

        function getContactsFromSelection($selection, $template) {
            $.post('{{ url('zfcadmin/selection/get-contacts') }}', {'id': $selection}, function (result) {
                let $contactTemplate = $('#contact-row-template');
                let html = Mustache.render($contactTemplate.html(), {'contacts': result.contacts, 'type': 'plus'});
                $template.html(html);
            });
        }

        $('#selection-search').click(function () {
            let $selection = $('#selection').val();
            getContactsFromSelection($selection, $('#choose-contacts-table'));
        });
        $('#contact-search').click(function () {
            let $query = $('#contact-search-string').val();
            getContacts($query, $('#choose-contacts-table'));
        });

        var $in = [];

        function init() {
            $('#contacts-table > tr').each(function () {
                $in.push($(this).data('id'));
            });
            updateHiddenElements();
        }

        init();

        function moveItem($element) {
            let $icon = $element.find('svg');
            let $contactId = $element.data('id');

            if ($icon.hasClass('fa-plus') && $.inArray($contactId, $in) === -1) {
                $icon.addClass('fa-minus').removeClass('fa-plus');
                $in.push($contactId);
                $('#contacts-table').append($element);
            } else if ($icon.hasClass('fa-minus')) {
                $icon.addClass('fa-plus').removeClass('fa-minus');
                $in.remove($contactId);
                $('#choose-contacts-table').append($element);
            }
            updateHiddenElements();
        }

        function updateHiddenElements() {
            let $hiddenElementTemplate = $('#hidden-element-template');
            let html = Mustache.render($hiddenElementTemplate.html(), {'elements': $in});
            $('#hidden-elements').html(html);
        }

        $('.table').on('click', 'tr', function () {
            moveItem($(this));
        });

        $('#remove-all').click(function () {
            $('#contacts-table > tr').each(function () {
                moveItem($(this));
            });
        });

        $('#add-all').click(function () {
            $('#choose-contacts-table > tr').each(function () {
                moveItem($(this));
            });
        });
        $('#reset').click(function () {
            location.reload();
        });
        $('#subtract').click(function () {
            let $contactsChosen = [];
            $('#choose-contacts-table > tr').each(function () {
                $contactsChosen.push($(this).data('id'));
            });

            $('#contacts-table > tr').each(function () {
                if ($.inArray($(this).data('id'), $contactsChosen) !== -1) {
                    $in.remove($(this).data('id'));
                    $(this).remove();
                }
            });
            updateHiddenElements();
        });

        Array.prototype.remove = function () {
            let what, a = arguments, L = a.length, ax;
            while (L && this.length) {
                what = a[--L];
                while ((ax = this.indexOf(what)) !== -1) {
                    this.splice(ax, 1);
                }
            }
            return this;
        };
    });
</script>


{% verbatim %}
<template id="contact-row-template">
        {{#contacts}}
            <tr data-id="{{ id }}">
                <td>
                    <i class="fas fa-{{ type }}"></i>
                </td>
                <td>
                    <small class="text-muted">{{ id }}</small></td>
                <td>{{ name }}</td>
                <td>{{ organisation }}</td>
            </tr>
         {{/contacts}}
</template>
<template id="hidden-element-template">
        {{#elements}}
            <input type="hidden" name="contacts[]" value="{{ . }}">
        {{/elements}}
</template>
{% endverbatim %}